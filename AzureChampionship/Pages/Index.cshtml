@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <link rel="stylesheet" href="css/index.css">
    <link rel="stylesheet" href="css/navbar.css">

    <!-- Data ingested link: https://gclawsontempsensor.azurewebsites.net/api/temperature/{devicename} -->
    <!-- Website link: https://azurechampionship.azurewebsites.net -->

</head>

<body>

    <Section class="navBar">
        <header>
            <div class="container">
                <h1 class="logo"></h1>

                <nav>
                    <ul>
                        <li><a href="https://certmatters.com/wp-content/uploads/2020/06/Azure-Fundamentals-Championship-Brief-030620.pdf">Azure Championship 2020 Details</a></li>
                    </ul>
                </nav>
            </div>
        </header>
    </Section>


    <!-- //Header -->
    <section class="header">

        <h1>FlowBio</h1>
        <h2>- Azure Championship 2020 -</h2>
        <h2> Callum Thompson & Garry Clawson </h2>

    </section>

    <!-- // Action buttons  -->

    <div class="header">
        <form method="POST">
            <button type="submit" class="btn btn-success" asp-page-handler="start">Press to Simulate</button>
        </form>

    </div>

    <!-- // Description of team -->

    <div class="description">

        <h1>Example simulated environment showing warning conditions using realtime ingested data from simulated IoT devices.</h1>

    </div>


    <div class="floorPlan">
        <!--Test IMageMap property -->
        <img src="assets/floorPlan.png" class="image">

        <div class="circleRoom1" id="Room1"></div>
        <div class="circleRoom2" id="Room2"></div>
        <div class="circleRoom3" id="Room3"></div>
        <div class="circleRoom4" id="Room4"></div>
        <div class="circleRoom5" id="Room5"></div>
        <div class="circleRoom6" id="Room6"></div>
        <div class="circleRoom7" id="Room7"></div>
        <div class="circleRoom8" id="Room8"></div>
        <div class="circleRoom9" id="Room9"></div>
        <div class="circleRoom10" id="Room10"></div>
        <div class="circleRoom11" id="Room11"></div>
        <div class="circleRoom12" id="Room12"></div>

    </div>


</body>

</html>

<script>
// Listen to scroll event for window

    console.log("Page Loaded :)");


    //Room sensors values passed from backend c#

    var room1SensorValue = @Html.Raw(Json.Serialize(ViewData["room1SensorValue"]));
    console.log("Room 1 sensor value", room1SensorValue);

    var room2SensorValue = @Html.Raw(Json.Serialize(ViewData["room2SensorValue"]));
    console.log("Room 2 sensor value", room2SensorValue);

    var room3SensorValue = @Html.Raw(Json.Serialize(ViewData["room3SensorValue"]));
    console.log("Room 3 sensor value", room3SensorValue);

    var room4SensorValue = @Html.Raw(Json.Serialize(ViewData["room4SensorValue"]));
    console.log("Room 4 sensor value", room4SensorValue);

    var room5SensorValue = @Html.Raw(Json.Serialize(ViewData["room5SensorValue"]));
    console.log("Room 5 sensor value", room5SensorValue);

    var room6SensorValue = @Html.Raw(Json.Serialize(ViewData["room6SensorValue"]));
    console.log("Room 6 sensor value", room6SensorValue);

    var room7SensorValue = @Html.Raw(Json.Serialize(ViewData["room7SensorValue"]));
    console.log("Room 7 sensor value", room7SensorValue);

    var room8SensorValue = @Html.Raw(Json.Serialize(ViewData["room8SensorValue"]));
    console.log("Room 8 sensor value", room8SensorValue);

    var room9SensorValue = @Html.Raw(Json.Serialize(ViewData["room9SensorValue"]));
    console.log("Room 9 sensor value", room9SensorValue);

    var room10SensorValue = @Html.Raw(Json.Serialize(ViewData["room10SensorValue"]));
    console.log("Room 10 sensor value", room10SensorValue);

    var room11SensorValue = @Html.Raw(Json.Serialize(ViewData["room11SensorValue"]));
    console.log("Room 11 sensor value", room11SensorValue);

    var room12SensorValue = @Html.Raw(Json.Serialize(ViewData["room12SensorValue"]));
    console.log("Room 12 sensor value", room12SensorValue);



    //Note used - time interval to collect room sensor data from backend

    var sensorTime = 1;

    var interval = setInterval(function () {
        if (sensorTime <= 5) {
            sensorTime++;

        }
        else {
            clearInterval(interval);
        }
    }, 1000);






    //time interval to change colour every 1 second for 60 seconds

    var time = 1;

    var interval = setInterval(function () {
        if (time <= 60) {
            time++;

            //change colours

            document.getElementById("Room1").style.backgroundColor = getRoomColor(room1SensorValue);
            document.getElementById("Room2").style.backgroundColor = getRoomColor(room2SensorValue);
            document.getElementById("Room3").style.backgroundColor = getRoomColor(room3SensorValue);
            document.getElementById("Room4").style.backgroundColor = getRoomColor(room4SensorValue);
            document.getElementById("Room5").style.backgroundColor = getRoomColor(room5SensorValue);
            document.getElementById("Room6").style.backgroundColor = getRoomColor(room6SensorValue);
            document.getElementById("Room7").style.backgroundColor = getRoomColor(room7SensorValue);
            document.getElementById("Room8").style.backgroundColor = getRoomColor(room8SensorValue);
            document.getElementById("Room9").style.backgroundColor = getRoomColor(room9SensorValue);
            document.getElementById("Room10").style.backgroundColor = getRoomColor(room10SensorValue);
            document.getElementById("Room11").style.backgroundColor = getRoomColor(room11SensorValue);
            document.getElementById("Room12").style.backgroundColor = getRoomColor(room12SensorValue);

        }
        else {
            clearInterval(interval);
        }
    }, 1000);





    //Get random color to put onto shape

    //function getRandomColor() {
    //    var letters = '0123456789ABCDEF'.split('');

    //    var color = '#';

    //    for (var i = 0; i < 6; i++) {
    //        color += letters[Math.floor(Math.random() * 16)];
    //    }

    //    return color;
    //}

     //Get random color to put onto shape

    //function getRoom1Color() {

    //    if (room1SensorValue < 25)
    //    {

    //        color = '#7CFC00';

    //    } else if (room1SensorValue > 24 && room1SensorValue < 27)
    //    {

    //        color = '#FFA500';

    //    } else if (room1SensorValue > 26 && room1SensorValue < 35)
    //    {

    //        color = '#FF0000';
    //    }

    //    return color;
    //}


    function getRoomColor(roomColor) {

        if (roomColor < 24) {

            color = '#7CFC00';

        } else if (roomColor > 23 && roomColor < 26) {

            color = '#FFA500';

        } else if (roomColor > 25 && roomColor < 35) {

            color = '#FF0000';
        }

        return color;
    }







</script>